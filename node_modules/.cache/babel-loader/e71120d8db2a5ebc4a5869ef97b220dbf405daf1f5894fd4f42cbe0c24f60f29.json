{"ast":null,"code":"var _jsxFileName = \"/Users/lauren.cho/Downloads/practice/src/component/TodoList.jsx\",\n  _s = $RefreshSig$();\n// src/component/TodoList.jsx\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoList = [{\n  id: 1,\n  text: \"컴포넌트 만들기\",\n  done: true\n}, {\n  id: 2,\n  text: \"상태 관리하기\",\n  done: false\n}, {\n  id: 3,\n  text: \"배열 렌더링하기\",\n  done: false\n}];\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState(todoList);\n  const [input, setInput] = useState(\"\");\n  const nextId = useRef(4); // 렌더링과 별개로 기억되는 변수.\n  const inputRef = useRef();\n  const handleInput = e => {\n    setInput(e.target.value);\n  };\n\n  // input 상태값 + 업데이트 함수 만들기\n  const handleSubmit = e => {\n    e.preventDefault(); // 태그의 기본 기능 막는다.\n\n    if (input === \"\") return; // input이 빈 문자일 때 함수 종료.\n\n    // 기존의 todos 배열을 새로운 배열에 복사하고, 마지막에 새로운 요소 추가.\n    //      => 기존 배열과 다른 새로운 배열을 만들어서 불변성 유지.\n\n    // setTodos([...todos, { id: 4, text: input, done: false }]);\n    setTodos(todos.concat({\n      id: nextId.current++,\n      text: input,\n      done: false\n    }));\n    setInput(\"\");\n    inputRef.current.focus();\n  };\n  const handleRemove = id => {\n    if (window.confirm(\"삭제하시겠습니까?\"))\n      // 선택한 id가 아닌 요소들만 모으기(filter) => filter도 새로운 배열 반환.\n      setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const handleToggle = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      done: !todo.done\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleInput,\n        value: input,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: todo.done && \"line-through\",\n          userSelect: \"none\"\n        },\n        onClick: () => handleToggle(todo.id),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation(); // 이벤트 전파를 더 이상하지 않는다.\n            handleRemove(todo.id);\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"EvsJg0mIUFgbYRyqx48y/w8vHTc=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useRef","useState","todoList","id","text","done","TodoList","todos","setTodos","input","setInput","nextId","inputRef","handleInput","e","target","value","handleSubmit","preventDefault","concat","current","focus","handleRemove","window","confirm","filter","todo","handleToggle","map","textDecoration","userSelect","stopPropagation"],"sources":["/Users/lauren.cho/Downloads/practice/src/component/TodoList.jsx"],"sourcesContent":["// src/component/TodoList.jsx\nimport { useRef, useState } from \"react\";\n\nconst todoList = [\n  { id: 1, text: \"컴포넌트 만들기\", done: true },\n  { id: 2, text: \"상태 관리하기\", done: false },\n  { id: 3, text: \"배열 렌더링하기\", done: false },\n];\n\nfunction TodoList() {\n  const [todos, setTodos] = useState(todoList);\n  const [input, setInput] = useState(\"\");\n\n  const nextId = useRef(4); // 렌더링과 별개로 기억되는 변수.\n  const inputRef = useRef();\n\n  const handleInput = (e) => {\n    setInput(e.target.value);\n  };\n\n  // input 상태값 + 업데이트 함수 만들기\n  const handleSubmit = (e) => {\n    e.preventDefault(); // 태그의 기본 기능 막는다.\n\n    if (input === \"\") return; // input이 빈 문자일 때 함수 종료.\n\n    // 기존의 todos 배열을 새로운 배열에 복사하고, 마지막에 새로운 요소 추가.\n    //      => 기존 배열과 다른 새로운 배열을 만들어서 불변성 유지.\n\n    // setTodos([...todos, { id: 4, text: input, done: false }]);\n    setTodos(todos.concat({ id: nextId.current++, text: input, done: false }));\n\n    setInput(\"\");\n    inputRef.current.focus();\n  };\n\n  const handleRemove = (id) => {\n    if (window.confirm(\"삭제하시겠습니까?\"))\n      // 선택한 id가 아닌 요소들만 모으기(filter) => filter도 새로운 배열 반환.\n      setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggle = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, done: !todo.done } : todo\n      )\n    );\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          onChange={handleInput}\n          value={input}\n          ref={inputRef}\n        />\n        <button>등록</button>\n      </form>\n      <ul>\n        {todos.map((todo) => (\n          <li\n            key={todo.id}\n            style={{\n              textDecoration: todo.done && \"line-through\",\n              userSelect: \"none\",\n            }}\n            onClick={() => handleToggle(todo.id)}\n          >\n            <span>{todo.text}</span>\n            <button\n              onClick={(e) => {\n                e.stopPropagation(); // 이벤트 전파를 더 이상하지 않는다.\n                handleRemove(todo.id);\n              }}\n            >\n              삭제\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}